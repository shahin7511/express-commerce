openapi: 3.0.3
info:
  title: Express-Commerce 1.0.0
  description: |-
    The e-commerce project is a platform that enables online businesses to showcase and sell their products online. 
    [Notion Link](https://www.notion.so/softzino/Express-Commerce-7bf5a7416f49401b93d28b84898be4bc?pvs=4)

  termsOfService: http://expresscommerce.com/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://expresscommerce.com
servers:
  - url: https://express-commers.com

paths:
  /featured:
    get:
      tags:
        - Store Front
      summary: Get featured product for carousel
      operationId: featured
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/featured"
  /showcase:
    get:
      tags:
        - Store Front
      summary: Get showcase product , paginated, allows query params
      operationId: showcase
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/showcase"
  /product/{slug}:
    get:
      tags:
        - Store Front
      summary: Get single product
      operationId: showSingleProduct
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
            example: twenty-years-old-china-palm-bonshai
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
  /tag/{tagName}:
    get:
      tags:
        - Store Front
      summary: Get product by tag name
      operationId: showProductByTagName
      parameters:
        - name: tagName
          in: path
          required: true
          schema:
            type: string
            example: bonshai
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: "#/components/schemas/product"
                    - $ref: "#/components/schemas/product1"
  /category/{categoryName}:
    get:
      tags:
        - Store Front
      summary: Get product by category name
      operationId: showProductByCategoryName
      parameters:
        - name: categoryName
          in: path
          required: true
          schema:
            type: string
            example: bonshai
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: "#/components/schemas/product"
                    - $ref: "#/components/schemas/product1"
  /top-sales:
    get:
      tags:
        - Store Front
      summary: Get top sales products
      operationId: topsales
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/topsales"
  /recently-viewed:
    get:
      tags:
        - Store Front
      summary: Get recently viewed products
      operationId: recentlyViewed
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/recentlyViewed"
  /categories:
    get:
      tags:
        - Store Front
      summary: This api will reutrn category list for homepage menu
      operationId: getTagsForHome
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                  - id
                  - title
                  - enabled
                  - thumb_url
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 12
                    title:
                      type: string
                      example: Bonshai
                    enabled:
                      type: boolean
                      example: true
                    thumb_url:
                      type: string
                      example: https://dtt1c9id3txwq.cloudfront.net/assets/images/001/434/632/square/DSC_0487.jpg

  /submit-order:
    post:
      tags:
        - Store Front
      summary: Submit Order
      operationId: submitOrder
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    anyOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                            example: 123
                          quantity:
                            type: integer
                            format: int64
                            example: 12
                      - type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                            example: 124
                          quantity:
                            type: integer
                            format: int64
                            example: 5
                coupon:
                  type: string
                  example: BIJOY-2024

      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiResponse"

components:
  schemas:
    product:
      type: object
      required:
        - id
        - title
        - mega_image_url
        - thumb_url
        - price
      properties:
        id:
          type: integer
          format: int64
          example: 1002
        title:
          type: string
          example: "Fukien Tea Tree Bonsai (Fukien Tea Tree)"
        mega_image_url:
          type: string
          example: https://dtt1c9id3txwq.cloudfront.net/assets/images/001/434/632/square/DSC_0487.jpg
        thumb_url:
          type: string
          example: https://dtt1c9id3txwq.cloudfront.net/assets/images/001/434/632/square/DSC_0487.jpg
        price:
          type: integer
          format: int64
          example: 1500
    product1:
      type: object
      required:
        - id
        - title
        - mega_image_url
        - thumb_url
        - price
      properties:
        id:
          type: integer
          format: int64
          example: 2012
        title:
          type: string
          example: "Fukien Coffee Tree Bonsai (Fukien Tea Tree)"
        mega_image_url:
          type: string
          example: https://dtt1c9id3txwq.cloudfront.net/assets/images/001/434/632/square/DSC_0487.jpg
        thumb_url:
          type: string
          example: https://dtt1c9id3txwq.cloudfront.net/assets/images/001/434/632/square/DSC_0487.jpg
        price:
          type: integer
          format: int64
          example: 2500
    featured:
      type: array
      items:
        $ref: "#/components/schemas/product"
    apiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
          example: Request processed successfully
    showcase:
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/product"
    topsales:
      type: array
      items:
        $ref: "#/components/schemas/product"
    recentlyViewed:
      type: array
      items:
        $ref: "#/components/schemas/product"
