openapi: 3.0.3
info:
  title: Express-Commerce 1.0.0
  description: |-
    The e-commerce project is a platform that enables online businesses to showcase and sell their products online. 
    [Notion Link](https://www.notion.so/softzino/Express-Commerce-7bf5a7416f49401b93d28b84898be4bc?pvs=4)

  termsOfService: http://expresscommerce.com/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://expresscommerce.com
servers:
  - url: https://express-commers.com

paths:
  /login:
    summary: To access the application as authenticated user, User needs to log in
    post:
      tags:
        - Auth
      summary: User loges in with ID and Password
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - "email"
                - "password"
              properties:
                email:
                  type: string
                  example: hello@appl.com
                password:
                  type: string
                  example: 1324UNa6
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - "email"
                - "password"
              properties:
                email:
                  type: string
                  example: hello@appl.com
                password:
                  type: string
                  example: 1324UNa6
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                  - refresh_token
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                  refresh_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c

  /refresh:
    post:
      summary: When auth token time exprires, user send a rquest to refresh the token
      operationId: refreshToken
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c

      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                  - refresh_token
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                  refresh_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
  /register:
    summary: To access the application as authenticated user, User needs to register
    post:
      tags:
        - Auth
      summary: User registers with email ID and Password
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - "email"
                - "password"
              properties:
                email:
                  type: string
                  example: hello@appl.com
                password:
                  type: string
                  example: 1324UNa6
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - "email"
                - "password"
              properties:
                email:
                  type: string
                  example: hello@appl.com
                password:
                  type: string
                  example: 1324UNa6
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                  - refresh_token
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                  refresh_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c

  /featured:
    get:
      tags:
        - Store Front
      summary: Get featured product for carousel
      operationId: featured
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/featured"
  /showcase:
    get:
      tags:
        - Store Front
      summary: Get showcase product , paginated, allows query params
      operationId: showcase
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/showcase"
  /product/{slug}:
    get:
      tags:
        - Store Front
      summary: Get single product
      operationId: showSingleProduct
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
            example: twenty-years-old-china-palm-bonshai
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
  /tag/{tagName}:
    get:
      tags:
        - Store Front
      summary: Get product by tag name
      operationId: showProductByTagName
      parameters:
        - name: tagName
          in: path
          required: true
          schema:
            type: string
            example: bonshai
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: "#/components/schemas/product"
                    - $ref: "#/components/schemas/product1"
  /category/{categoryName}:
    get:
      tags:
        - Store Front
      summary: Get product by category name
      operationId: showProductByCategoryName
      parameters:
        - name: categoryName
          in: path
          required: true
          schema:
            type: string
            example: bonshai
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: "#/components/schemas/product"
                    - $ref: "#/components/schemas/product1"
  /top-sales:
    get:
      tags:
        - Store Front
      summary: Get top sales products
      operationId: topsales
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/topsales"
  /recently-viewed:
    get:
      tags:
        - Store Front
      summary: Get recently viewed products
      operationId: recentlyViewed
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/recentlyViewed"
  /categories:
    get:
      tags:
        - Store Front
      summary: This api will reutrn category list for homepage menu
      operationId: getTagsForHome
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                  - id
                  - title
                  - enabled
                  - thumb_url
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 12
                    title:
                      type: string
                      example: Bonshai
                    enabled:
                      type: boolean
                      example: true
                    thumb_url:
                      type: string
                      example: https://dtt1c9id3txwq.cloudfront.net/assets/images/001/434/632/square/DSC_0487.jpg

  /submit-order:
    post:
      tags:
        - Store Front
      summary: Submit Order
      operationId: submitOrder
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - "products"
              properties:
                products:
                  type: array
                  items:
                    anyOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                            example: 123
                          quantity:
                            type: integer
                            format: int64
                            example: 12
                      - type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                            example: 124
                          quantity:
                            type: integer
                            format: int64
                            example: 5
                coupon:
                  type: string
                  example: BIJOY-2024

      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiResponse"

  /cms/attributes:
    get:
      summary: Get attributes list
      operationId: cmsGetAttriutes
      tags:
        - CMS
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/paginatedAttributes"
    post:
      summary: Creates attribute
      operationId: cmsCreateAttriute
      tags:
        - CMS
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/attribute"
          application/json:
            schema:
              $ref: "#/components/schemas/attribute"

      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/paginatedAttributes"
  /cms/attributes/{id}:
    patch:
      summary: Updates attribute
      operationId: cmsUpdateAttriute
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 20
      tags:
        - CMS
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/attribute"
          application/json:
            schema:
              $ref: "#/components/schemas/attribute"

      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/attribute"
    delete:
      summary: Deletes attribute
      operationId: cmsDeleteAttribute
      tags:
        - CMS
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 20
      responses:
        "204":
          description: Successful operation

  /cms/category:
    get:
      summary: List categories
      operationId: getCategories
      tags:
        - CMS
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/paginatedCategories"
    post:
      summary: Create category
      operationId: cmsCreateCategory
      tags:
        - CMS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/category"
          application/x-www-form-urlencoded:
            schema:
              type: object
              $ref: "#/components/schemas/category"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/category"
  /cms/category/{id}:
    summary: Get single category
    get:
      tags:
        - CMS
      operationId: cmsCategoryGetById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 33
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/category"
    patch:
      description: Patches category
      operationId: cmsPatchCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 20
      tags:
        - CMS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/category"
          application/x-www-form-urlencoded:
            schema:
              type: object
              $ref: "#/components/schemas/category"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/category"
    delete:
      tags:
        - CMS
      summary: Deletes category
      operationId: cmsDeleteCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 201
      responses:
        "203":
          description: Successful operation

  /cms/products:
    get:
      tags:
        - CMS
      summary: Get paginated products for CMS listing
      operationId: cmsGetProducts
      parameters:
        - name: current_page
          in: query
          schema:
            type: integer
            format: int64
            example: 1
        - name: per_page
          in: query
          schema:
            type: integer
            format: int64
            example: 20
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/paginateProducts"
  /cms/products/{id}:
    get:
      tags:
        - CMS
      summary: Gets single product in CMS
      operationId: cmsGetSingleProductById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 1203
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/product"
    patch:
      tags:
        - CMS
      summary: Patches product
      operationId: cmsPatchProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 203

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/product"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/product"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/product"
    delete:
      tags:
        - CMS
      summary: Deletes product
      operationId: cmsDeleteProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 30
      responses:
        "203":
          description: Successful operation

components:
  schemas:
    product:
      type: object
      required:
        - id
        - title
        - mega_image_url
        - thumb_url
        - price
      properties:
        id:
          type: integer
          format: int64
          example: 1002
        title:
          type: string
          example: "Fukien Tea Tree Bonsai (Fukien Tea Tree)"
        mega_image_url:
          type: string
          example: https://dtt1c9id3txwq.cloudfront.net/assets/images/001/434/632/square/DSC_0487.jpg
        thumb_url:
          type: string
          example: https://dtt1c9id3txwq.cloudfront.net/assets/images/001/434/632/square/DSC_0487.jpg
        price:
          type: integer
          format: int64
          example: 1500
    product1:
      type: object
      required:
        - id
        - title
        - mega_image_url
        - thumb_url
        - price
      properties:
        id:
          type: integer
          format: int64
          example: 2012
        title:
          type: string
          example: "Fukien Coffee Tree Bonsai (Fukien Tea Tree)"
        mega_image_url:
          type: string
          example: https://dtt1c9id3txwq.cloudfront.net/assets/images/001/434/632/square/DSC_0487.jpg
        thumb_url:
          type: string
          example: https://dtt1c9id3txwq.cloudfront.net/assets/images/001/434/632/square/DSC_0487.jpg
        price:
          type: integer
          format: int64
          example: 2500
    featured:
      type: array
      items:
        $ref: "#/components/schemas/product"
    apiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
          example: Request processed successfully
    showcase:
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/product"
    topsales:
      type: array
      items:
        $ref: "#/components/schemas/product"
    recentlyViewed:
      type: array
      items:
        $ref: "#/components/schemas/product"
    paginateProducts:
      type: object
      required:
        - data
        - current_page
        - next_page
        - prev_page
        - total
        - per_page
      properties:
        data:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/product"
              - $ref: "#/components/schemas/product1"
        current_page:
          type: integer
          format: int64
          example: 1
        next_page:
          type: integer
          format: int64
          example: 2
        prev_page:
          type: integer
          format: int64
          example: 0
        total:
          type: integer
          format: int64
          example: 56
        per_page:
          type: integer
          format: int64
          example: 20
    attribute:
      type: object
      required:
        - id
        - name
        - type
        - required
        - size
      properties:
        id:
          type: integer
          format: int64
          example: 20
        name:
          type: string
          example: "name"
        type:
          type: string
          example: text
          enum:
            - text
            - string
            - file
        required:
          type: boolean
          example: true
          enum:
            - true
            - false
        size:
          type: integer
          format: int64
          example: 140

    paginatedAttributes:
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/attribute"
          - $ref: "#/components/schemas/attribute"

    category:
      type: object
      required:
        - id
        - name
        - parent_id
        - enabled
      properties:
        id:
          type: integer
          format: int64
          example: 203
        name:
          type: string
          example: Bonsai
        parent_id:
          type: integer
          format: int64
          example: 201
        enabled:
          type: boolean
          example: false
          enum:
            - true
            - false
    paginatedCategories:
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/category"
          - $ref: "#/components/schemas/category"
